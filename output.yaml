AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Specification template describing your function.
Parameters:
  Stage:
    Type: String
    Default: Dev
  CacheSize:
    Type: Number
    Default: 40000
  SecretCacheSize:
    Type: Number
    Default: 4000
Resources:
  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      OpenApiVersion: 3.0.1
      StageName:
        Ref: Stage
      EndpointConfiguration:
        Type: REGIONAL
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: s3://amplify-reactamplified-dev-192342-deployment/bd3537e108e41265bef96b30dc010d0d
      Auth:
        ApiKeyRequired: true
        UsagePlan:
          CreateUsagePlan: PER_API
      AccessLogSetting:
        DestinationArn:
          Fn::GetAtt:
          - ApiGwCwLogGroup
          - Arn
        Format: '{"RequestId":"$context.requestId", "RequestTime":"$context.requestTime",
          "RequesterIp":"$context.identity.sourceIp", "PrincipalId":"$context.authorizer.principalId",
          "HttpMethod":"$context.httpMethod", "Resource":"$context.path", "AuthorizationStatusCode":"$context.authorize.status","ResponseStatusCode":"$context.integration.status",
          "ErrorMsg":"$context.authorizer.errorMessage"}'
  ApiGwCwLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: apigw-${AWS::StackName}
      RetentionInDays: 90
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.amazonaws.samples.entrypoints.ServiceHandler
      Runtime: java11
      CodeUri: s3://amplify-reactamplified-dev-192342-deployment/c63a8dadffbd3cae3ca2e7968b296a25
      Description: Lambda function that hosts the psedonymization/re-identification
        logic
      MemorySize: 1024
      Timeout: 60
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Environment:
        Variables:
          CACHE_SIZE:
            Ref: CacheSize
          KmsKeyArn:
            Fn::GetAtt:
            - KmsKeyId
            - Arn
          SECRET_CACHE_SIZE:
            Ref: SecretCacheSize
          SECRET_ARN:
            Fn::Sub: EncryptionKeys-${AWS::StackName}
          SECRET_REGION:
            Fn::Sub: ${AWS::Region}
  lambdaApiGatewayPseudonymInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - LambdaFunction
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/POST/pseudonymization
  lambdaApiGatewayReidentifyInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - LambdaFunction
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/POST/reidentification
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - Ref: LambdaCWPermissionsPolicy
      - Ref: LambdaEncryptionPermissionsPolicy
  LambdaCWPermissionsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          - logs:DescribeLogStreams
          - logs:GetLogEvents
          - logs:CreateLogGroup
          Resource:
          - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
  LambdaEncryptionPermissionsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - secretsmanager:GetSecretValue
          - secretsmanager:DescribeSecret
          - secretsmanager:ListSecretVersionIds
          - secretsmanager:TagResource
          - secretsmanager:UntagResource
          Resource:
            Ref: EncryptionKeys
        - Effect: Allow
          Action:
          - kms:DescribeKey
          - kms:Decrypt
          Resource:
            Fn::GetAtt:
            - KmsKeyId
            - Arn
  EncryptionKeys:
    Type: AWS::SecretsManager::Secret
    Properties:
      KmsKeyId:
        Ref: KmsKeyId
      Name:
        Fn::Sub: EncryptionKeys-${AWS::StackName}
  KmsKeyId:
    Type: AWS::KMS::Key
    Properties:
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: default
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS:
              Fn::Sub: arn:aws:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: '*'
      KeySpec: SYMMETRIC_DEFAULT
Outputs:
  PseudonymizationUrl:
    Value:
      Fn::Sub: https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/pseudonymization
  ReidentificationUrl:
    Value:
      Fn::Sub: https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/reidentification
  KmsKeyArn:
    Value:
      Fn::GetAtt:
      - KmsKeyId
      - Arn
  SecretName:
    Value:
      Fn::Sub: EncryptionKeys-${AWS::StackName}
